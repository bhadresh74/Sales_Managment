/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package window;

import data.db_connection;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhadresh
 */
public class production_home extends javax.swing.JFrame {

//    /**
//     * Creates new form purchase_home
//     */ // JDBC driver name and database URL
//   static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
//   static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/my_db";
//
//   //  Database credentials
//   static final String USER = "root";
//   static final String PASS = "1234";
    production_home p;
    public db_connection dc = new db_connection();
    
    
    public production_home() {
        initComponents();
        dc.makeconnection();
        doMyAction();
    }

    public void doMyAction()
    {
       DefaultTableModel model = (DefaultTableModel)production.getModel();
       
       int rowCount = model.getRowCount();
       for (int i = rowCount - 1; i >= 0; i--)
       {
        model.removeRow(i);
       }
       
       try{
       dc.stmt = dc.conn.createStatement();
       String sql;

       sql = "SELECT * FROM production";
       ResultSet rs = dc.stmt.executeQuery(sql);

       while(rs.next())
       {
           String rm_date = rs.getString("rm_date");
           String party_name = rs.getString("party_name");
           String material_name = rs.getString("material_name");
           String pro_name = rs.getString("product_name");
           float mat_weight = rs.getFloat("material_weight");
           int pro_piece  = rs.getInt("prod_piece");
           float piece_weight = rs.getFloat("piece_weight");
           float tot_weight  = rs.getFloat("total_weight");
           float grin = rs.getFloat("grinding");
           float waste = rs.getFloat("waste");
           float sum = rs.getFloat("sum");
//          long mobile_no = rs.getLong("mobile_no");
//          String email = rs.getString("email");

          model.addRow(new Object[]{rm_date,party_name,material_name,pro_name,mat_weight,pro_piece,piece_weight,tot_weight,grin,waste,sum});
          //p.refresh_w();
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        production = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        refresh = new javax.swing.JButton();
        selling = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Production");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        production.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Raw Material Date", "Party Name", "Material Name", "Product Name", "Material Weight", "Product Piece", "Piece Weight", "Total Weight", "Grinding", "Waste", "Sum"
            }
        ));
        production.setEnabled(false);
        jScrollPane1.setViewportView(production);
        if (production.getColumnModel().getColumnCount() > 0) {
            production.getColumnModel().getColumn(0).setMinWidth(100);
            production.getColumnModel().getColumn(1).setMinWidth(80);
            production.getColumnModel().getColumn(2).setMinWidth(90);
            production.getColumnModel().getColumn(3).setMinWidth(90);
            production.getColumnModel().getColumn(4).setMinWidth(90);
            production.getColumnModel().getColumn(5).setMinWidth(80);
            production.getColumnModel().getColumn(6).setMinWidth(80);
            production.getColumnModel().getColumn(7).setMinWidth(80);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 895, 600));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refresh.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel2.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 110, 30));

        selling.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        selling.setText("Production");
        selling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellingActionPerformed(evt);
            }
        });
        jPanel2.add(selling, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 110, 30));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel5.setText("Select Options");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 6, 90, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 29, 190, 11));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed

       do_refresh();
    }//GEN-LAST:event_refreshActionPerformed

    private void sellingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellingActionPerformed

       add_production ap = new add_production();
       ap.setAlwaysOnTop(true);
       Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
       this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
       ap.setVisible(true);
       ap.pack();
       ap.setLocationRelativeTo(null);
    }//GEN-LAST:event_sellingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(production_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(production_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(production_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(production_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new production_home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable production;
    private javax.swing.JButton refresh;
    private javax.swing.JButton selling;
    // End of variables declaration//GEN-END:variables

    private void do_refresh() {
    
       DefaultTableModel model = (DefaultTableModel)production.getModel();
       
       int rowCount = model.getRowCount();
       for (int i = rowCount - 1; i >= 0; i--)
       {
        model.removeRow(i);
       }
       
       try{
       dc.stmt = dc.conn.createStatement();
       String sql;

       sql = "SELECT * FROM production";
       ResultSet rs = dc.stmt.executeQuery(sql);

       while(rs.next())
       {
           int pid = rs.getInt("pr_id");
           String rm_date = rs.getString("rm_date");
           String party_name = rs.getString("party_name");
           String material_name = rs.getString("material_name");
           String pro_name = rs.getString("product_name");
           float mat_weight = rs.getFloat("material_weight");
           int pro_piece  = rs.getInt("prod_piece");
           float piece_weight = rs.getFloat("piece_weight");
           float tot_weight  = rs.getFloat("total_weight");
           float grin = rs.getFloat("grinding");
           float waste = rs.getFloat("waste");
           float sum = rs.getFloat("sum");

          model.addRow(new Object[]{rm_date,party_name,material_name,pro_name,mat_weight,pro_piece,piece_weight,tot_weight,grin,waste,sum});
          dc.stmt = dc.conn.createStatement();
          
          
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    
    }
}
