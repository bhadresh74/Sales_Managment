/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package window;

import data.db_connection;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhadresh
 */
public class purchase_home extends javax.swing.JFrame {

    purchase_home p;
    public db_connection dc = new db_connection();
    
    
    public purchase_home() {
        initComponents();
        dc.makeconnection();
        doMyAction();
    }

    public void doMyAction()
    {
       DefaultTableModel model = (DefaultTableModel)purchase.getModel();
       
       try{
       dc.stmt = dc.conn.createStatement();
       String sql;

       sql = "SELECT * FROM purchase";
       ResultSet rs = dc.stmt.executeQuery(sql);

       while(rs.next())
       {
           int pid = rs.getInt("p_id");
           String date = rs.getString("date");
           String party_name = rs.getString("party_name");
           String material_name = rs.getString("material_name");
           float rate  = rs.getFloat("rate");
           float weight = rs.getFloat("weight");
           int expense  = rs.getInt("expense");
           float amount = rs.getFloat("amount");
           float amount_due = rs.getFloat("amount_due");
           String status = rs.getString("status");
//          String party_name = rs.getString("party_name");
//            System.out.println(party_name);
//          String address = rs.getString("address");
//          long mobile_no = rs.getLong("mobile_no");
//          String email = rs.getString("email");

          model.addRow(new Object[]{pid,date,party_name,material_name,rate,weight,expense,amount,amount_due,status
          });
          //p.refresh_w();
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        purchase = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        refresh = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        edit = new javax.swing.JButton();
        payment = new javax.swing.JButton();
        pur = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Purchase");
        setMinimumSize(new java.awt.Dimension(1000, 655));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(760, 700));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        purchase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No.", "Date", "Party Name", "Material Name", "Rate", "Weight", "Expense", "Amount", "Amount Due", "Payment Status"
            }
        ));
        purchase.setEnabled(false);
        jScrollPane1.setViewportView(purchase);
        if (purchase.getColumnModel().getColumnCount() > 0) {
            purchase.getColumnModel().getColumn(0).setPreferredWidth(50);
            purchase.getColumnModel().getColumn(9).setPreferredWidth(80);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 630));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 830, 630));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refresh.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel2.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 110, 30));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel5.setText("Select Options");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 6, 90, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 29, 190, 11));

        edit.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel2.add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 110, 30));

        payment.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        payment.setText("Payment");
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });
        jPanel2.add(payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 110, 30));

        pur.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        pur.setText("Purchase");
        pur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purActionPerformed(evt);
            }
        });
        jPanel2.add(pur, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 110, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        
        do_refresh();
    }//GEN-LAST:event_refreshActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed

       edit_purchase ep = new edit_purchase();
       ep.setAlwaysOnTop(true);
       Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
       this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
       ep.setVisible(true);
       ep.pack();
       ep.setLocationRelativeTo(null);
    }//GEN-LAST:event_editActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        
       pur_payment pp = new pur_payment();
       pp.setAlwaysOnTop(true);
       Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
       this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
       pp.setVisible(true);
       pp.pack();
       pp.setLocationRelativeTo(null);
    }//GEN-LAST:event_paymentActionPerformed

    private void purActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purActionPerformed

       add_purchase ap = new add_purchase();
       ap.setAlwaysOnTop(true);
       Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
       this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
       ap.setVisible(true);
       ap.pack();
       ap.setLocationRelativeTo(null);
    }//GEN-LAST:event_purActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(purchase_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(purchase_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(purchase_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(purchase_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new purchase_home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton payment;
    private javax.swing.JButton pur;
    public javax.swing.JTable purchase;
    private javax.swing.JButton refresh;
    // End of variables declaration//GEN-END:variables

    private void do_refresh() {
    
       DefaultTableModel model = (DefaultTableModel)purchase.getModel();
   
       int rowCount = model.getRowCount();
       for (int i = rowCount - 1; i >= 0; i--)
       {
        model.removeRow(i);
       }
       
       try{
       dc.stmt = dc.conn.createStatement();
       String sql;

       sql = "SELECT * FROM purchase";
       //sql = "SELECT * FROM purchase where Flag='0'";
       ResultSet rs = dc.stmt.executeQuery(sql);

       while(rs.next())
       {
           int pid = rs.getInt("p_id");
           String date = rs.getString("date");
           String party_name = rs.getString("party_name");
           String material_name = rs.getString("material_name");
           float rate  = rs.getFloat("rate");
           float weight = rs.getFloat("weight");
           int expense  = rs.getInt("expense");
           float amount = rs.getInt("amount");
           float amount_due = rs.getInt("amount_due");
           String payment_status = rs.getString("status");
//          String party_name = rs.getString("party_name");
//            System.out.println(party_name);
//          String address = rs.getString("address");
//          long mobile_no = rs.getLong("mobile_no");
//          String email = rs.getString("email");

          model.addRow(new Object[]{pid,date,party_name,material_name,rate,weight,expense,amount,amount_due,payment_status});
          dc.stmt = dc.conn.createStatement();
//          sql = "UPDATE `my_db`.`purchase` SET `Flag`='1' WHERE `p_id`='"+pid+"';";
//          dc.stmt.executeUpdate(sql);
          
          
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    
    }
}
